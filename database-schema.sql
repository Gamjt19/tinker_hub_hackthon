-- Svapna AI - Dream Decoder Database Schema
-- Run this in your Supabase SQL Editor

-- Create the dreams table
CREATE TABLE public.dreams (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    dream_text text NOT NULL,
    mood text,
    image_url text,
    interpretation_json jsonb
);

-- Enable Row Level Security (RLS)
ALTER TABLE public.dreams ENABLE ROW LEVEL SECURITY;

-- Create policies for secure access
CREATE POLICY "Users can view their own dreams."
ON public.dreams FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Users can insert their own dreams."
ON public.dreams FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own dreams."
ON public.dreams FOR UPDATE
USING (auth.uid() = user_id);

CREATE POLICY "Users can delete their own dreams."
ON public.dreams FOR DELETE
USING (auth.uid() = user_id);

-- Create indexes for better performance
CREATE INDEX idx_dreams_user_id ON public.dreams(user_id);
CREATE INDEX idx_dreams_created_at ON public.dreams(created_at);
CREATE INDEX idx_dreams_mood ON public.dreams(mood);

-- Optional: Create a function to get dream statistics
CREATE OR REPLACE FUNCTION get_dream_stats(user_uuid uuid)
RETURNS TABLE(
    total_dreams bigint,
    this_month bigint,
    most_common_mood text
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        COUNT(*)::bigint as total_dreams,
        COUNT(CASE 
            WHEN created_at >= date_trunc('month', CURRENT_DATE) 
            THEN 1 
        END)::bigint as this_month,
        (SELECT mood 
         FROM dreams 
         WHERE user_id = user_uuid 
         GROUP BY mood 
         ORDER BY COUNT(*) DESC 
         LIMIT 1) as most_common_mood
    FROM dreams 
    WHERE user_id = user_uuid;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER; 